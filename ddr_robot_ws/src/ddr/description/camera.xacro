<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">


    # joint to connect the camera to the chassis
    # need to add a link and joint for the camera i.e. the physical camera itself
    <joint name="camera_joint" type="fixed">        # choose a sematic name and type depends on if the camera is moving or not
        <parent link="chassis"/>
        <child link="camera_link"/>                 # standard naming convention in ros
        <origin xyz="0.305 0 0.08" rpy="0 0 0"/>    # using the standard ros coordinate system
    </joint>
    
    <link name="camera_link">
        <visual>
            <geometry>
                <box size="0.01 0.03 0.03"/>
            </geometry>
            <material name="orange"/>
        </visual>

        # dont need the collision and inertial tags since the camera is small on this robot
        # will need to add the collison for other builds if the camera sticks out a lot 
        # will need to add the inertial if the camera is not on a fixed joint
        <!-- <collision>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
        </collision>

        <xacro:inertial_cylinder mass="0.1" length="0.04" radius="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>   # xyz and rpy set to zero because there are none in visual tag
        </xacro:inertial_cylinder> -->
    </link>



    # joint to connect the optical coordinate to the camera
    # used to convert from the ros standar coordinate to the camera coordinate system
    <joint name="camera_optical_joint" type="fixed">    # choose a sematic name and type depends on if the camera is moving or not
        <parent link="camera_link"/>
        <child link="camera_link_optical"/>             # standard naming convention in ros

        # xyz position is at the origin of camera_link
        # rpy is rotated to the camera coordinate system
        <origin xyz="0 0 0" rpy="${-pi/2} 0 ${-pi/2}"/>               
    </joint>

    # an invisible link - an alternative way of the above joint(camera_joint) and link(camera_link)
    # i.e. an alias for the above
    <link name="camera_link_optical"> </link>



    # associated with "laser_frame" link
    <gazebo reference="camera_link">
        <material>Gazebo/Orange</material>

        # name doesnt matter but type is camera, which is a rgb camera
        # name is the parent topic path - check rviz
        <sensor name="my_camera" type="camera">
            <pose> 0 0 0 0 0 0 </pose>          # origin of the virtual sensor is at the origin of the "camera_link"
            <visualize>true</visualize>
            <update_rate>10</update_rate>       # scans 10 times a second?
            <camera>
                <horizontal_fov>1.089</horizontal_fov>  # how zoomed in or out the image is - units of radians - number is based on the actual camera being used
                <image>
                    <format>R8G8B8</format>             # 8 bits for each colour channel
                    <width>640</width>                  # size of image - arbitrary
                    <height>480</height>
                </image>
                <clip>
                    <near>0.05</near>   # minimum range of camera is 50mm
                    <far>8.0</far>      # maximum range of camera is 8 meters
                </clip>
            </camera>

            # used to get gazebo to interact with thing outside it
            # plugin takes an gazebo camera and gets it to take with ros
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">     # name doesnt really matter
                
                # plugin uses the coordinate system of camera_link_optical but gazebo uses the coordinate system of camera_link
                # published image data is associated with the camera_link_optical link
                # frame id to put in the Image message
                <frame_name>camera_link_optical</frame_name>
            </plugin>
        </sensor>
    </gazebo>

</robot>