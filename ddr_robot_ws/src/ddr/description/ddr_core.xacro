<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro">

    # inertia needs and origin (corresponds to the one in visual)
    # if it doesn't have it then set the origin as zeros
    <xacro:include filename="inertial_macros.xacro" />

    <!-- colours to reference to of links -->
    <material name="white">
        <color rgba="1 1 1 1"/>
    </material> 

    <material name="orange">
        <color rgba="1 0.3 0.1 1"/>
    </material>     
    
    <material name="blue">
        <color rgba="0.2 0.2 1 1"/>
    </material>     
    
    <material name="black">
        <color rgba="0 0 0 1"/>
    </material>     

    # colour for lidar
    <material name="red">
        <color rgba="1 0 0 1"/>
    </material>    


    <!-- by convention, the first link for a mobile robot in ros should be named base_link -->
    <link name="base_link">
        # the base link is the body frame of the DDR
        # every other joint and link are referenced off of this frame
    </link>



    <!-- attaches the chassis to the base link (body frame) -->
    <joint name="chassis_joint" type="fixed">
        <parent link="base_link"/>
        <child link="chassis"/>
        <origin xyz="-0.1 0 0"/>    # position of the child link relative to the parent link [meters]
    </joint>

    <link name="chassis">
        <visual>
            <origin xyz="0.15 0 0.075"/>    # position of the center of the box [meters]
            <geometry>
                <box size="0.3 0.3 0.15"/>  # dimension of box [meters]
            </geometry>
            <material name="white"/>
        </visual>

        <collision>
            <origin xyz="0.15 0 0.075"/>    # position of the center of the box [meters]
            <geometry>
                <box size="0.3 0.3 0.15"/>  # dimension of box [meters]
            </geometry>
        </collision>

        <xacro:inertial_box mass="0.5" x="0.3" y="0.3" z="0.15">
            <origin xyz="0.15 0 0.075" rpy="0 0 0"/>    # origin xyz same as in visual
        </xacro:inertial_box>
    </link>

    <gazebo reference="chassis">
        <material>Gazebo/White</material>
    </gazebo>



    <!-- LEFT WHEEL  -->
    <joint name="left_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="left_wheel"/>

        # offset the wheel a little more than its length (avoid wheel friction against the chassis)
        # the cylinder's inital position is flat side pointing up, have to rotate it CW about base_link's x axis
        # cylinder positive z axis is pointing outwards
        <origin xyz="0 0.175 0" rpy="-${pi/2} 0 0"/>

        <axis xyz="0 0 1"/>     # CCW rotation of the cylinder about its z axis
    </joint>

    <link name="left_wheel">
        <visual>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
            <material name="blue"/>
        </visual>

        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
        </collision>

        <xacro:inertial_cylinder mass="0.1" length="0.04" radius="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>   # xyz and rpy set to zero because there are none in visual tag
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="left_wheel">
        <material>Gazebo/Blue</material>
    </gazebo>



    <!-- RIGHT WHEEL -->
    <joint name="right_wheel_joint" type="continuous">
        <parent link="base_link"/>
        <child link="right_wheel"/>

        # offset the wheel a little more than its length (avoid wheel friction against the chassis)
        # the cylinder's inital position is flat side pointing up, have to rotate it CCW about base_link's x axis
        # cylinder positive z axis is pointing outwards
        <origin xyz="0 -0.175 0" rpy="${pi/2} 0 0"/>

        <axis xyz="0 0 -1"/>    # CW rotation of the cylinder about its z axis
    </joint>

    <link name="right_wheel">
        <visual>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
            <material name="blue"/>
        </visual>

        <collision>
            <geometry>
                <cylinder radius="0.05" length="0.04"/>
            </geometry>
        </collision>

        <xacro:inertial_cylinder mass="0.1" length="0.04" radius="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>   # xyz and rpy set to zero because there are none in visual tag
        </xacro:inertial_cylinder>
    </link>

    <gazebo reference="right_wheel">
        <material>Gazebo/Blue</material>
    </gazebo>


    <!-- CASTER WHEEL -->
    <joint name="caster_wheel_joint" type="fixed">
        <parent link="chassis"/>
        <child link="caster_wheel"/>
        <origin xyz="0.24 0 0"/>
    </joint>

    <link name="caster_wheel">
        <visual>
            <geometry>
                <sphere radius="0.05"/>
            </geometry>
            <material name="black"/>
        </visual>

        <collision>
            <geometry>
                <sphere radius="0.05"/>
            </geometry>
        </collision>

        <xacro:inertial_sphere mass="0.1" radius="0.05">
            <origin xyz="0 0 0" rpy="0 0 0"/>   # xyz and rpy set to zero because there are none in visual tag
        </xacro:inertial_sphere>
    </link>

    <gazebo reference="caster_wheel">
        <material>Gazebo/Green</material>
        <mu1 value="0.000001"/>
        <mu2 value="0.000001"/>
    </gazebo>

</robot>