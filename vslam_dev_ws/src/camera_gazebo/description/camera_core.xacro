<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="camera_robot">

    <!-- does not work for some reason, causes gazebo to crash, bu.xacro works though -->

    <xacro:property name="camera_link" value="0.05" /> <!-- Size of square 'camera' box -->

    <gazebo reference="camera_stand_link">
        <material>Gazebo/Green</material>
        <!-- <gravity>0.0</gravity> -->
    </gazebo>


    <!-- This first link called "world" is empty -->
    <link name="world"/>

    <!-- A simple fixed joint from our empty world link, to our base. -->
    <!-- The base origin is offset from the world origin. -->
    <joint name="world_to_stand" type="fixed">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <parent link="world"/>
        <child link="camera_stand_link"/>   
    </joint>


    <!-- <link name="dummy">

    </link>

    <joint name="dummy_to_camera_link" type="continuous">
        <origin xyz="0 0 0" rpy="0 0 0"/>
        <pose>0 0 1 0 0 0</pose>
        <parent link="dummy"/>  
        <child link="camera_link"/>
        <axis>
            <xyz>0 0 1</xyz>
        </axis>
    </joint>   -->


    <!-- Camera -->
    <link name="camera_stand_link">
        <collision>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${camera_link} ${camera_link} ${camera_link}"/>
            </geometry>
        </collision>

        <visual>
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <geometry>
                <box size="${camera_link} ${camera_link} ${camera_link}"/>
            </geometry>
            <material name="green">
                <color rgba="0.2 1 0.2 1"/>
            </material>
        </visual>

        <inertial>
            <mass value="1e-5" />
            <origin xyz="0 0 0" rpy="0 0 0"/>
            <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
        </inertial>

    </link>
    

    <joint name="stand_to_camera" type="prismatic">
        <origin xyz="-1.25 0 0.1" rpy="0 0 0"/>
        <parent link="camera_stand_link"/>
        <child link="camera_link"/>
        <axis xyz="1 0 0"/>
        <limit lower="0" upper="2" velocity="100" effort="100"/> 
    </joint>


    <link name="camera_link">

    </link>


    <!-- camera -->
    <gazebo reference="camera_link">
        <sensor type="camera" name="camera1">
            <update_rate>30.0</update_rate>
            <visualize>true</visualize>
            <camera name="head">
                <horizontal_fov>1.3962634</horizontal_fov>
                <image>
                    <width>800</width>
                    <height>800</height>
                    <format>R8G8B8</format>
                </image>
                <clip>
                    <near>0.02</near>
                    <far>300</far>
                </clip>
                <noise>
                    <type>gaussian</type>

                    <mean>0.0</mean>
                    <stddev>0.007</stddev>
                </noise>
            </camera>
            <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
                <alwaysOn>true</alwaysOn>
                <updateRate>0.0</updateRate>
                <cameraName>vslam/camera1</cameraName>
                <imageTopicName>image_raw</imageTopicName>
                <cameraInfoTopicName>camera_info</cameraInfoTopicName>
                <frameName>camera_link</frameName>
                <hackBaseline>0.07</hackBaseline>
                <distortionK1>0.0</distortionK1>
                <distortionK2>0.0</distortionK2>
                <distortionK3>0.0</distortionK3>
                <distortionT1>0.0</distortionT1>
                <distortionT2>0.0</distortionT2>
            </plugin>
        </sensor>
    </gazebo>


    <!-- rate to publish to /joint_states topic -->
    <!-- <gazebo>
        <plugin name="gazebo_ros_joint_state_publisher"
            filename="libgazebo_ros_joint_state_publisher.so">
            <update_rate>100</update_rate>
            <joint_name>base_joint</joint_name>
        </plugin>
    </gazebo> -->

    <gazebo>
        <plugin name="gazebo_ros_link_pose_publisher"
            filename="libgazebo_ros_link_pose_publisher.so">
        </plugin>
    </gazebo>

</robot>